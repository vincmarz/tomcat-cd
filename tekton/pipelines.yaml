apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: demo-pipeline
  namespace: ci-pipelines
spec:
  params:
  - default: tomcathelloworld
    name: APP_NAME
    type: string
  - default: https://github.com/vincmarz/tomcathelloworld.git
    name: GIT_REPO
    type: string
  - default: main
    name: GIT_REVISION
    type: string
  - default: docker.io/vincmarz/tomcathelloworld
    name: IMAGE_NAME
    type: string
  - default: .
    name: PATH_CONTEXT
    type: string
  - name: IMAGE_TAG
    type: string
  - default: https://github.com/vincmarz/tomcat-cd.git
    name: GIT_CD_REPO
    type: string
  - default: "True"
    name: BUILD
    type: string
  - default: develop
    name: DEPLOY_ENV
    type: string
  - default: frontend
    name: SERVICE_NAME
    type: string
  - default: github.com
    name: GIT_URL
    type: string
  - default: grakover
    name: GIT_USER
    type: string
  - default: github
    name: GIT_TOKEN
    type: string
  - default: https
    name: CONN
    type: string
  - default: tomcat-cd
    name: REPO_NAME
    type: string
  tasks:
  - name: fetch-repository
    params:
    - name: url
      value: $(params.GIT_REPO)
    - name: revision
      value: $(params.GIT_REVISION)
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: workspace
  - name: build
    params:
    - name: IMAGE
      value: $(params.IMAGE_NAME):$(tasks.fetch-repository.results.commit)
    - name: TLSVERIFY
      value: "false"
    - name: CONTEXT
      value: $(params.PATH_CONTEXT)
    runAfter:
    - fetch-repository
    taskRef:
      kind: ClusterTask
      name: buildah
    when:
    - input: $(params.BUILD)
      operator: in
      values:
      - "True"
    workspaces:
    - name: source
      workspace: workspace
  - name: update-chart
    params:
    - name: git-url-source
      value: $(params.GIT_URL)
    - name: git-user
      value: $(params.GIT_USER)
    - name: git-repo-name
      value: $(params.REPO_NAME)
    - name: tag
      value: $(tasks.fetch-repository.results.commit)
    - name: branch
      value: $(params.GIT_REVISION)
    - name: git-secret-name
      value: $(params.GIT_TOKEN)
    - name: application-name
      value: $(params.APP_NAME)
    - name: deploy-env
      value: $(params.DEPLOY_ENV)
    - name: service-name
      value: $(params.SERVICE_NAME)
    - name: image
      value: $(params.IMAGE_NAME)
    - name: http
      value: $(params.CONN)
    runAfter:
    - test-chart
    taskRef:
      kind: ClusterTask
      name: update-chart
  - name: test-chart
    params:
    - name: git-url-source
      value: $(params.GIT_URL)
    - name: git-user
      value: $(params.GIT_USER)
    - name: git-repo-name
      value: $(params.REPO_NAME)
    - name: tag
      value: $(tasks.fetch-repository.results.commit)
    - name: image
      value: $(params.IMAGE_NAME)
    - name: branch
      value: $(params.GIT_REVISION)
    - name: git-secret-name
      value: $(params.GIT_TOKEN)
    - name: application-name
      value: $(params.APP_NAME)
    - name: deploy-env
      value: $(params.DEPLOY_ENV)
    - name: service-name
      value: $(params.SERVICE_NAME)
    - name: http
      value: $(params.CONN)
    runAfter:
    - build
    taskRef:
      kind: ClusterTask
      name: test-chart
  workspaces:
  - name: workspace
